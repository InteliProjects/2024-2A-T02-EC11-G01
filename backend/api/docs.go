// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "App API Support",
            "url": "https://github.com/Inteli-College/2024-2A-T02-EC11-G01",
            "email": "artemis@inteli.edu.br"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/location": {
            "get": {
                "description": "Get a list of all Locations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Retrieve all Locations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/location_usecase.FindLocationOutputDTO"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new Location in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Create a new Location",
                "parameters": [
                    {
                        "description": "Location entity to create",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/location_usecase.CreateLocationInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/location_usecase.CreateLocationOutputDTO"
                        }
                    }
                }
            }
        },
        "/location/{location_id}": {
            "get": {
                "description": "Get details of a specific Location by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Retrieve a Location by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Location ID",
                        "name": "location_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/location_usecase.FindLocationOutputDTO"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a specific Location entity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Update a Location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Location ID",
                        "name": "location_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Location entity to update",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/location_usecase.UpdateLocationInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/location_usecase.UpdateLocationOutputDTO"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a specific Location from the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Delete a Location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Location ID",
                        "name": "location_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/prediction": {
            "get": {
                "description": "Get a list of all Predictions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Predictions"
                ],
                "summary": "Retrieve all Predictions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/prediction_usecase.FindPredictionOutputDTO"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new Prediction in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Predictions"
                ],
                "summary": "Create a new Prediction",
                "parameters": [
                    {
                        "description": "Prediction entity to create",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/prediction_usecase.CreatePredictionInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/prediction_usecase.CreatePredictionOutputDTO"
                        }
                    }
                }
            }
        },
        "/prediction/location/{location_id}": {
            "get": {
                "description": "Get a list of all Predictions by Location ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Predictions"
                ],
                "summary": "Retrieve all Predictions by Location ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Location ID",
                        "name": "location_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/prediction_usecase.FindPredictionOutputDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/prediction/{prediction_id}": {
            "get": {
                "description": "Get details of a specific Prediction by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Predictions"
                ],
                "summary": "Retrieve a Prediction by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Prediction ID",
                        "name": "prediction_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/prediction_usecase.FindPredictionOutputDTO"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a specific Prediction entity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Predictions"
                ],
                "summary": "Update a Prediction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Prediction ID",
                        "name": "prediction_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Prediction entity to update",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/prediction_usecase.UpdatePredictionInputDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/prediction_usecase.UpdatePredictionOutputDTO"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a specific Prediction from the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Predictions"
                ],
                "summary": "Delete a Prediction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Prediction ID",
                        "name": "prediction_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Prediction deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "location_usecase.CreateLocationInputDTO": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "location_usecase.CreateLocationOutputDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "latitude": {
                    "type": "string"
                },
                "location_id": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "location_usecase.FindLocationOutputDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "latitude": {
                    "type": "string"
                },
                "location_id": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "predictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/prediction_usecase.FindPredictionOutputDTO"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "location_usecase.UpdateLocationInputDTO": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "string"
                },
                "location_id": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "location_usecase.UpdateLocationOutputDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "latitude": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "prediction_usecase.CreatePredictionInputDTO": {
            "type": "object",
            "properties": {
                "annotated_image_path": {
                    "type": "string"
                },
                "detections": {
                    "type": "integer"
                },
                "location_id": {
                    "type": "string"
                },
                "raw_image_path": {
                    "type": "string"
                }
            }
        },
        "prediction_usecase.CreatePredictionOutputDTO": {
            "type": "object",
            "properties": {
                "annotated_image_path": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "detections": {
                    "type": "integer"
                },
                "location_id": {
                    "type": "string"
                },
                "prediction_id": {
                    "type": "string"
                },
                "raw_image_path": {
                    "type": "string"
                }
            }
        },
        "prediction_usecase.FindPredictionOutputDTO": {
            "type": "object",
            "properties": {
                "annotated_image_path": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "detections": {
                    "type": "integer"
                },
                "location_id": {
                    "type": "string"
                },
                "prediction_id": {
                    "type": "string"
                },
                "raw_image_path": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "prediction_usecase.UpdatePredictionInputDTO": {
            "type": "object",
            "properties": {
                "annotated_image_path": {
                    "type": "string"
                },
                "detections": {
                    "type": "integer"
                },
                "location_id": {
                    "type": "string"
                },
                "prediction_id": {
                    "type": "string"
                },
                "raw_image_path": {
                    "type": "string"
                }
            }
        },
        "prediction_usecase.UpdatePredictionOutputDTO": {
            "type": "object",
            "properties": {
                "annotated_image_path": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "detections": {
                    "type": "integer"
                },
                "location_id": {
                    "type": "string"
                },
                "prediction_id": {
                    "type": "string"
                },
                "raw_image_path": {
                    "type": "string"
                },
                "update_at": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8081",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "App API",
	Description:      "This is a.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
